From c273acc5a7326e597598456202d6bfa02601c9b5 Mon Sep 17 00:00:00 2001
From: zhangnan <zhangnan@huawei.com>
Date: Sat, 25 Feb 2023 16:03:52 +0800
Subject: [PATCH] fix no error information when update initrd

Determine whether there is a matching menuentry by using matchedKernel
and matchedTitle when update initrd.

---
 grubby.c       | 36 ++++++++++++++++++++++++++++++++++--
 installkernel  |  6 +++---
 new-kernel-pkg | 29 ++++++++++++++++++++++++++---
 3 files changed, 63 insertions(+), 8 deletions(-)

diff --git a/grubby.c b/grubby.c
index 6d7cbd8..ed55e45 100644
--- a/grubby.c
+++ b/grubby.c
@@ -3728,12 +3728,18 @@ int addMBInitrd(struct grubConfig * cfg, const char *newMBKernel,
     struct singleEntry * entry;
     struct singleLine * line, * kernelLine, *endLine = NULL;
     int index = 0;
+    int matchedKernel = 0;
+    int matchedTitle = 0;
 
-    if (!image) return 0;
+    if (!image) {
+        fprintf(stderr, _("grubby: kernel path must be specified\n"));
+        return 1;
+    }
 
     for (; (entry = findEntryByPath(cfg, image, prefix, &index)); index++) {
         kernelLine = getLineByType(LT_MBMODULE, entry->lines);
         if (!kernelLine) continue;
+        matchedKernel++;	
 
 	/* if title is supplied, the entry's title must match it. */
 	if (title) {
@@ -3750,6 +3756,7 @@ int addMBInitrd(struct grubConfig * cfg, const char *newMBKernel,
 		free(linetitle);
 		continue;
 	    }
+	    matchedTitle++;
 	    free(linetitle);
 	}
 
@@ -3774,6 +3781,15 @@ int addMBInitrd(struct grubConfig * cfg, const char *newMBKernel,
         break;
     }
 
+    if (!matchedKernel) {
+        fprintf(stderr, _("grubby: no matched kernel, fail to update initrd\n"));
+        return 1;
+    }
+    if (!matchedTitle && title) {
+        fprintf(stderr, _("grubby: no matched kernel title, fail to update initrd\n"));
+        return 1;
+    }
+
     return 0;
 }
 
@@ -3782,12 +3798,18 @@ int updateInitrd(struct grubConfig * cfg, const char * image,
     struct singleEntry * entry;
     struct singleLine * line, * kernelLine, *endLine = NULL;
     int index = 0;
+    int matchedKernel = 0;
+    int matchedTitle = 0;
 
-    if (!image) return 0;
+    if (!image) {
+        fprintf(stderr, _("grubby: kernel path must be specified\n"));
+        return 1;
+    }
 
     for (; (entry = findEntryByPath(cfg, image, prefix, &index)); index++) {
         kernelLine = getLineByType(LT_KERNEL|LT_KERNEL_EFI|LT_KERNEL_16, entry->lines);
         if (!kernelLine) continue;
+        matchedKernel++;	
 
 	/* if title is supplied, the entry's title must match it. */
 	if (title) {
@@ -3804,6 +3826,7 @@ int updateInitrd(struct grubConfig * cfg, const char * image,
 		free(linetitle);
 		continue;
 	    }
+	    matchedTitle++;
 	    free(linetitle);
 	}
 
@@ -3844,6 +3867,15 @@ int updateInitrd(struct grubConfig * cfg, const char * image,
         break;
     }
 
+    if (!matchedKernel) {
+        fprintf(stderr, _("grubby: no matched kernel, fail to update initrd\n"));
+        return 1;
+    }
+    if (!matchedTitle && title) {
+        fprintf(stderr, _("grubby: no matched kernel title, fail to update initrd\n"));
+        return 1;
+    }
+
     return 0;
 }
 
diff --git a/installkernel b/installkernel
index 68dcfac..a77d9da 100755
--- a/installkernel
+++ b/installkernel
@@ -86,9 +86,9 @@ fi
 
 if [ -n "$cfgLoader" ] && [ -x /sbin/new-kernel-pkg ]; then
 	if [ -n "$(which dracut 2>/dev/null)" ]; then
-		new-kernel-pkg --mkinitrd --dracut --host-only --depmod --install --kernel-name $KERNEL_NAME $KERNEL_VERSION
+		new-kernel-pkg --mkinitrd --dracut --host-only --depmod --install --kernel-name $KERNEL_NAME $KERNEL_VERSION || exit $?
 	else
-		new-kernel-pkg --mkinitrd --depmod --install --kernel-name $KERNEL_NAME $KERNEL_VERSION
+		new-kernel-pkg --mkinitrd --depmod --install --kernel-name $KERNEL_NAME $KERNEL_VERSION || exit $?
 	fi
-	new-kernel-pkg --rpmposttrans --kernel-name $KERNEL_NAME $KERNEL_VERSION
+	new-kernel-pkg --rpmposttrans --kernel-name $KERNEL_NAME $KERNEL_VERSION || exit $?
 fi
diff --git a/new-kernel-pkg b/new-kernel-pkg
index 20853d3..043821f 100755
--- a/new-kernel-pkg
+++ b/new-kernel-pkg
@@ -142,6 +142,11 @@ rungrubby() {
 		[ -n "$verbose" ] && echo "- Making a normal entry."
 	fi
 	$(eval $grubby $@)
+	res=$?
+	if [ $res != 0 ];
+	then
+		exit 1
+	fi
 	export -n debugargs
 	export -n debugtitle
 	unset debugargs
@@ -171,9 +176,15 @@ install() {
     # XXX kernel should be able to be specified also (or work right on ia64)
     if [ ! -f $kernelImage ] ; then
 	[ -n "$verbose" ] && echo "kernel for $version does not exist, not running grubby"
-	return
+	exit 1
     fi
 
+    if [ -z "$cfgGrub" -a -z "$cfgGrub2" -a -z "$cfgGrub2Efi" -a -z "$cfgLilo" -a -z "$cfgExtlinux" ];
+    then
+        [ -n "$verbose" ] && echo "configuration file does not exist, not running grubby"
+        exit 1
+    fi	
+
     INITRD=""
     if [ -f $initrdfile ]; then
 	[ -n "$verbose" ] && echo "found $initrdfile and using it with grubby"
@@ -330,6 +341,12 @@ remove() {
 	return
     fi
 
+    if [ -z "$cfgGrub" -a -z "$cfgGrub2" -a -z "$cfgGrub2Efi" -a -z "$cfgLilo" -a -z "$cfgExtlinux" ];
+    then
+        [ -n "$verbose" ] && echo "configuration file does not exist, not running grubby"
+        exit 1
+    fi
+
     local files
     local f
     files="/etc/kernel/prerm.d/*[^~] /etc/kernel/prerm.d/$version/*[^~]"
@@ -389,7 +406,13 @@ remove() {
 update() {
     if [ ! -f $kernelImage ] ; then
 	[ -n "$verbose" ] && echo "kernel for $version does not exist, not running grubby"
-	return
+	exit 1
+    fi
+
+    if [ -z "$cfgGrub" -a -z "$cfgGrub2" -a -z "$cfgGrub2Efi" -a -z "$cfgLilo" -a -z "$cfgExtlinux" ];
+    then
+        [ -n "$verbose" ] && echo "configuration file does not exist, not running grubby"
+        exit 1
     fi
 
     set_title
@@ -778,7 +801,7 @@ fi
 
 if [ ! -x $grubby ] ; then
     [ -n "$verbose" ] && echo "$grubby does not exist"
-    exit 0
+    exit 1
 fi
 
 
-- 
2.33.0


